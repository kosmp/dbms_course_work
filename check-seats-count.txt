-- Триггер на уменьшение свободных мест при покупке билетов
CREATE OR REPLACE FUNCTION update_seats() RETURNS TRIGGER AS $$
DECLARE
  v_capacity INTEGER;
BEGIN
  SELECT h.capacity INTO v_capacity
  FROM halls h
  JOIN showtimes s ON h.id = s.hall_id
  WHERE s.id = NEW.showtime_id;

  IF v_capacity - 1 >= 0 THEN
    UPDATE halls SET capacity = capacity - 1
    WHERE id = (SELECT hall_id FROM showtimes WHERE id = NEW.showtime_id);
  ELSE
    RAISE EXCEPTION 'Недостаточно свободных мест';
  END IF;
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_seats_after_insert
AFTER INSERT ON tickets
FOR EACH ROW EXECUTE FUNCTION update_seats();


-- Триггер на увеличение свободных мест при возврате билетов
CREATE OR REPLACE FUNCTION increase_seats() RETURNS TRIGGER AS $$
DECLARE
  v_capacity INTEGER;
BEGIN
  SELECT h.capacity INTO v_capacity
  FROM halls h
  JOIN showtimes s ON h.id = s.hall_id
  WHERE s.id = OLD.showtime_id;

  UPDATE halls SET capacity = capacity + 1
  WHERE id = (SELECT hall_id FROM showtimes WHERE id = OLD.showtime_id);

  RETURN OLD;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER increase_seats_after_delete
AFTER DELETE ON tickets
FOR EACH ROW EXECUTE FUNCTION increase_seats();
