CREATE OR REPLACE FUNCTION recommend_movie_based_on_playlists(p_user_id BIGINT)
RETURNS TABLE(movie_id INTEGER, title VARCHAR(100)) AS $$
DECLARE
  v_genre_id BIGINT;
BEGIN
  -- Найти жанр, который часто встречается в плейлистах пользователя
  SELECT movie_genre.genre_id INTO v_genre_id
  FROM playlist_movies
  JOIN playlist ON playlist_movies.playlist_id = playlist.id
  JOIN movies ON playlist_movies.movie_id = movies.id
  JOIN movie_genre ON movies.id = movie_genre.movie_id
  WHERE playlist.user_id = p_user_id
  GROUP BY movie_genre.genre_id
  ORDER BY COUNT(*) DESC
  LIMIT 1;

  -- Рекомендовать фильм того же жанра, который пользователь еще не смотрел и который еще не в плейлисте
  RETURN QUERY
  SELECT movies.id, movies.title
  FROM movies
  JOIN movie_genre ON movies.id = movie_genre.movie_id
  WHERE movie_genre.genre_id = v_genre_id
  AND NOT EXISTS (
    SELECT 1
    FROM views
    JOIN online_movies ON views.online_movie_id = online_movies.id
    WHERE online_movies.movie_id = movies.id
    AND views.user_id = p_user_id
  )
  AND NOT EXISTS (
    SELECT 1
    FROM playlist_movies
    JOIN playlist ON playlist_movies.playlist_id = playlist.id
    WHERE playlist_movies.movie_id = movies.id
    AND playlist.user_id = p_user_id
  )
  LIMIT 1;
END;
$$ LANGUAGE plpgsql;

-- Для тестов рекоммендаций для юзера с id=1
-- SELECT * FROM recommend_movie_based_on_playlists(1);
